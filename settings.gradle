String dirName = rootProject.projectDir.name
rootProject.name = dirName

List projects = [
  'plugins:myesplugin',
  'test:fixtures:example-fixture',
]

// File examplePluginsDir = new File(rootProject.projectDir, 'plugins/examples')
// List<String> examplePlugins = []
// for (File example : examplePluginsDir.listFiles()) {
//   if (example.isDirectory() == false) continue;
//   if (example.name.startsWith('build') || example.name.startsWith('.')) continue;
//   projects.add("example-plugins:${example.name}".toString())
//   examplePlugins.add(example.name)
// }

include projects.toArray(new String[0])

/**
  * Iterates over sub directories, looking for build.gradle, and adds a project if found
  * for that dir with the given path prefix. Note that this requires each level
  * of the dir hierarchy to have a build.gradle. Otherwise we would have to iterate
  * all files/directories in the source tree to find all projects.
  */
void addSubProjects(String path, File dir, List<String> projects, List<String> branches) {
  if (dir.isDirectory() == false) return;
  if (dir.name == 'buildSrc') return;
  if (new File(dir, 'build.gradle').exists() == false) return;

  final String projectName = "${path}:${dir.name}"
  include projectName

  if (path.isEmpty()) {
    project(projectName).projectDir = dir
  }
  for (File subdir : dir.listFiles()) {
    addSubProjects(projectName, subdir, projects, branches)
  }
}

